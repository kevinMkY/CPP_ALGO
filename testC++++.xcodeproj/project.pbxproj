// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		65118AE72508CFBD004D8F15 /* 509_斐波那契数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AE62508CFBD004D8F15 /* 509_斐波那契数.cpp */; };
		65118AE92508D175004D8F15 /* 5_最长回文子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AE82508D175004D8F15 /* 5_最长回文子串.cpp */; };
		65118AEF2508EA58004D8F15 /* 237_删除链表中的节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AED2508EA58004D8F15 /* 237_删除链表中的节点.cpp */; };
		65118AF32508EC4B004D8F15 /* 14_最长公共前缀.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AF12508EC4B004D8F15 /* 14_最长公共前缀.cpp */; };
		65118AF82508F3E4004D8F15 /* 206_反转链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AF62508F3E4004D8F15 /* 206_反转链表.cpp */; };
		65118AFB2508F836004D8F15 /* ListNode.hpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AFA2508F836004D8F15 /* ListNode.hpp */; };
		65118AFE2508FF79004D8F15 /* 141_环形链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65118AFC2508FF79004D8F15 /* 141_环形链表.cpp */; };
		65282CFC250F5E0C00CEFC94 /* faceTest_0206_回文链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65282CFA250F5E0C00CEFC94 /* faceTest_0206_回文链表.cpp */; };
		65282CFF250F6DE000CEFC94 /* 234_回文链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65282CFD250F6DE000CEFC94 /* 234_回文链表.cpp */; };
		654466B72509111000E5959E /* 83_删除排序链表中的重复元素.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 654466B52509111000E5959E /* 83_删除排序链表中的重复元素.cpp */; };
		654466BA2509134800E5959E /* 876_链表的中间节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 654466B82509134800E5959E /* 876_链表的中间节点.cpp */; };
		6546F4612510DF8E0016F09D /* 856_括号的分数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6546F45F2510DF8E0016F09D /* 856_括号的分数.cpp */; };
		6546F4642510F0730016F09D /* 150_逆波兰表达式求值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6546F4622510F0730016F09D /* 150_逆波兰表达式求值.cpp */; };
		6546F4672510F5650016F09D /* 224_基本计算器.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6546F4652510F5650016F09D /* 224_基本计算器.cpp */; };
		6546F46C2511ED570016F09D /* 232_用栈实现队列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6546F46A2511ED570016F09D /* 232_用栈实现队列.cpp */; };
		6546F46F2511F2D30016F09D /* 1021_删除最外层的括号.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6546F46D2511F2D30016F09D /* 1021_删除最外层的括号.cpp */; };
		658295E124ED057E0077E48E /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 658295E024ED057E0077E48E /* main.cpp */; };
		65870726250B9C5D005BFEC2 /* 1290_二进制链表转整数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65870724250B9C5D005BFEC2 /* 1290_二进制链表转整数.cpp */; };
		65870729250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65870727250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.cpp */; };
		6587072C250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6587072A250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.cpp */; };
		6587072F250BA768005BFEC2 /* offer_06_从尾到头打印链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 6587072D250BA768005BFEC2 /* offer_06_从尾到头打印链表.cpp */; };
		65870732250BB3F1005BFEC2 /* offer_24_反转链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65870730250BB3F1005BFEC2 /* offer_24_反转链表.cpp */; };
		65870735250BB560005BFEC2 /* faceTest_0201_移除重复节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65870733250BB560005BFEC2 /* faceTest_0201_移除重复节点.cpp */; };
		65A1285A25135967008E24AF /* 1544_整理字符串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A1285825135967008E24AF /* 1544_整理字符串.cpp */; };
		65A1285E251374BE008E24AF /* 225_用队列实现栈.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A1285C251374BE008E24AF /* 225_用队列实现栈.cpp */; };
		65A1286425138DAE008E24AF /* 933_最近的请求次数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A1286225138DAE008E24AF /* 933_最近的请求次数.cpp */; };
		65A1286925139293008E24AF /* offer_59_滑动窗口的最大值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A1286725139293008E24AF /* offer_59_滑动窗口的最大值.cpp */; };
		65A1286D2513A84B008E24AF /* 239_滑动窗口最大值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A1286B2513A84B008E24AF /* 239_滑动窗口最大值.cpp */; };
		65A9D3EA251B234800244EFF /* 107_二叉树的层次遍历 II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3E8251B234800244EFF /* 107_二叉树的层次遍历 II.cpp */; };
		65A9D3EE251B239000244EFF /* 662_二叉树最大宽度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3EC251B239000244EFF /* 662_二叉树最大宽度.cpp */; };
		65A9D3F2251B23E000244EFF /* 589_N叉树的前序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3F0251B23E000244EFF /* 589_N叉树的前序遍历.cpp */; };
		65A9D3F6251B240D00244EFF /* 590_N叉树的后序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3F4251B240D00244EFF /* 590_N叉树的后序遍历.cpp */; };
		65A9D3FA251B243700244EFF /* 559_N叉树的最大深度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3F8251B243700244EFF /* 559_N叉树的最大深度.cpp */; };
		65A9D3FE251B246900244EFF /* 114_二叉树展开为链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D3FC251B246900244EFF /* 114_二叉树展开为链表.cpp */; };
		65A9D402251B249A00244EFF /* 101_对称二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D400251B249900244EFF /* 101_对称二叉树.cpp */; };
		65A9D406251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D404251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.cpp */; };
		65A9D40A251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D408251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.cpp */; };
		65A9D40E251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65A9D40C251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.cpp */; };
		65B5374C250903DB00FE9807 /* 203_移除链表元素.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65B5374A250903DB00FE9807 /* 203_移除链表元素.cpp */; };
		65B6820F250F583A00C039AB /* 160_相交链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65B6820D250F583A00C039AB /* 160_相交链表.cpp */; };
		65C28C6A2519DA9F00C94E7C /* 226_翻转二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65C28C682519DA9F00C94E7C /* 226_翻转二叉树.cpp */; };
		65CCFBC6250F75E700ECC563 /* 20_有效的括号.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65CCFBC4250F75E700ECC563 /* 20_有效的括号.cpp */; };
		65D2EAB1250F4214009DC352 /* faceTest_0207_链表相交.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65D2EAAF250F4214009DC352 /* faceTest_0207_链表相交.cpp */; };
		65D2EAB4250F4AE0009DC352 /* 21_合并两个有序链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65D2EAB2250F4AE0009DC352 /* 21_合并两个有序链表.cpp */; };
		65D2EAB7250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65D2EAB5250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.cpp */; };
		65D2EABA250F53E9009DC352 /* offer_18_删除链表的节点.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65D2EAB8250F53E9009DC352 /* offer_18_删除链表的节点.cpp */; };
		65DF9BD42519F6F70055E0BE /* 144_二叉树的前序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65DF9BD22519F6F70055E0BE /* 144_二叉树的前序遍历.cpp */; };
		65DF9BD9251A03860055E0BE /* 145_二叉树的后序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65DF9BD7251A03860055E0BE /* 145_二叉树的后序遍历.cpp */; };
		65DF9BDE251A27610055E0BE /* 94_二叉树的中序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65DF9BDC251A27610055E0BE /* 94_二叉树的中序遍历.cpp */; };
		65DF9BE3251A30320055E0BE /* 102_二叉树的层序遍历.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65DF9BE1251A30320055E0BE /* 102_二叉树的层序遍历.cpp */; };
		65DF9BE7251A33320055E0BE /* 104_二叉树的最大深度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65DF9BE5251A33320055E0BE /* 104_二叉树的最大深度.cpp */; };
		65FA4BD92511F73900FB8651 /* offer_09_用两个栈实现队列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BD72511F73900FB8651 /* offer_09_用两个栈实现队列.cpp */; };
		65FA4BDC2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BDA2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.cpp */; };
		65FA4BDF2511FFB700FB8651 /* 682_棒球比赛.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BDD2511FFB700FB8651 /* 682_棒球比赛.cpp */; };
		65FA4BE22512024E00FB8651 /* 496_下一个更大元素 I.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BE02512024E00FB8651 /* 496_下一个更大元素 I.cpp */; };
		65FA4BE5251205FA00FB8651 /* 1441_用栈操作构建数组.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BE3251205FA00FB8651 /* 1441_用栈操作构建数组.cpp */; };
		65FA4BE825120AD000FB8651 /* faceTest_0302_栈的最小值.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BE625120AD000FB8651 /* faceTest_0302_栈的最小值.cpp */; };
		65FA4BEB25120D8D00FB8651 /* 844_比较含退格的字符串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 65FA4BE925120D8D00FB8651 /* 844_比较含退格的字符串.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		658295DB24ED057E0077E48E /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		65118AE62508CFBD004D8F15 /* 509_斐波那契数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "509_斐波那契数.cpp"; sourceTree = "<group>"; };
		65118AE82508D175004D8F15 /* 5_最长回文子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5_最长回文子串.cpp"; sourceTree = "<group>"; };
		65118AEA2508D41C004D8F15 /* 509_斐波那契数.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "509_斐波那契数.h"; sourceTree = "<group>"; };
		65118AEB2508D444004D8F15 /* 5_最长回文子串.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "5_最长回文子串.h"; sourceTree = "<group>"; };
		65118AED2508EA58004D8F15 /* 237_删除链表中的节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "237_删除链表中的节点.cpp"; sourceTree = "<group>"; };
		65118AEE2508EA58004D8F15 /* 237_删除链表中的节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "237_删除链表中的节点.hpp"; sourceTree = "<group>"; };
		65118AF12508EC4B004D8F15 /* 14_最长公共前缀.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "14_最长公共前缀.cpp"; sourceTree = "<group>"; };
		65118AF22508EC4B004D8F15 /* 14_最长公共前缀.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "14_最长公共前缀.hpp"; sourceTree = "<group>"; };
		65118AF42508EC7A004D8F15 /* common.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = common.h; sourceTree = "<group>"; };
		65118AF62508F3E4004D8F15 /* 206_反转链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "206_反转链表.cpp"; sourceTree = "<group>"; };
		65118AF72508F3E4004D8F15 /* 206_反转链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "206_反转链表.hpp"; sourceTree = "<group>"; };
		65118AFA2508F836004D8F15 /* ListNode.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = ListNode.hpp; sourceTree = "<group>"; };
		65118AFC2508FF79004D8F15 /* 141_环形链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "141_环形链表.cpp"; sourceTree = "<group>"; };
		65118AFD2508FF79004D8F15 /* 141_环形链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "141_环形链表.hpp"; sourceTree = "<group>"; };
		65282CFA250F5E0C00CEFC94 /* faceTest_0206_回文链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "faceTest_0206_回文链表.cpp"; sourceTree = "<group>"; };
		65282CFB250F5E0C00CEFC94 /* faceTest_0206_回文链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "faceTest_0206_回文链表.hpp"; sourceTree = "<group>"; };
		65282CFD250F6DE000CEFC94 /* 234_回文链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "234_回文链表.cpp"; sourceTree = "<group>"; };
		65282CFE250F6DE000CEFC94 /* 234_回文链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "234_回文链表.hpp"; sourceTree = "<group>"; };
		654466B52509111000E5959E /* 83_删除排序链表中的重复元素.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "83_删除排序链表中的重复元素.cpp"; sourceTree = "<group>"; };
		654466B62509111000E5959E /* 83_删除排序链表中的重复元素.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "83_删除排序链表中的重复元素.hpp"; sourceTree = "<group>"; };
		654466B82509134800E5959E /* 876_链表的中间节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "876_链表的中间节点.cpp"; sourceTree = "<group>"; };
		654466B92509134800E5959E /* 876_链表的中间节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "876_链表的中间节点.hpp"; sourceTree = "<group>"; };
		6546F45F2510DF8E0016F09D /* 856_括号的分数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "856_括号的分数.cpp"; sourceTree = "<group>"; };
		6546F4602510DF8E0016F09D /* 856_括号的分数.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "856_括号的分数.hpp"; sourceTree = "<group>"; };
		6546F4622510F0730016F09D /* 150_逆波兰表达式求值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "150_逆波兰表达式求值.cpp"; sourceTree = "<group>"; };
		6546F4632510F0730016F09D /* 150_逆波兰表达式求值.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "150_逆波兰表达式求值.hpp"; sourceTree = "<group>"; };
		6546F4652510F5650016F09D /* 224_基本计算器.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "224_基本计算器.cpp"; sourceTree = "<group>"; };
		6546F4662510F5650016F09D /* 224_基本计算器.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "224_基本计算器.hpp"; sourceTree = "<group>"; };
		6546F46A2511ED570016F09D /* 232_用栈实现队列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "232_用栈实现队列.cpp"; sourceTree = "<group>"; };
		6546F46B2511ED570016F09D /* 232_用栈实现队列.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "232_用栈实现队列.hpp"; sourceTree = "<group>"; };
		6546F46D2511F2D30016F09D /* 1021_删除最外层的括号.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1021_删除最外层的括号.cpp"; sourceTree = "<group>"; };
		6546F46E2511F2D30016F09D /* 1021_删除最外层的括号.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "1021_删除最外层的括号.hpp"; sourceTree = "<group>"; };
		658295DD24ED057E0077E48E /* testC++++ */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "testC++++"; sourceTree = BUILT_PRODUCTS_DIR; };
		658295E024ED057E0077E48E /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		65870724250B9C5D005BFEC2 /* 1290_二进制链表转整数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1290_二进制链表转整数.cpp"; sourceTree = "<group>"; };
		65870725250B9C5D005BFEC2 /* 1290_二进制链表转整数.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "1290_二进制链表转整数.hpp"; sourceTree = "<group>"; };
		65870727250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_22_链表中倒数第k个节点.cpp"; sourceTree = "<group>"; };
		65870728250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_22_链表中倒数第k个节点.hpp"; sourceTree = "<group>"; };
		6587072A250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "faceTest_0202_返回倒数第 k 个节点.cpp"; sourceTree = "<group>"; };
		6587072B250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "faceTest_0202_返回倒数第 k 个节点.hpp"; sourceTree = "<group>"; };
		6587072D250BA768005BFEC2 /* offer_06_从尾到头打印链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_06_从尾到头打印链表.cpp"; sourceTree = "<group>"; };
		6587072E250BA768005BFEC2 /* offer_06_从尾到头打印链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_06_从尾到头打印链表.hpp"; sourceTree = "<group>"; };
		65870730250BB3F1005BFEC2 /* offer_24_反转链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_24_反转链表.cpp"; sourceTree = "<group>"; };
		65870731250BB3F1005BFEC2 /* offer_24_反转链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_24_反转链表.hpp"; sourceTree = "<group>"; };
		65870733250BB560005BFEC2 /* faceTest_0201_移除重复节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "faceTest_0201_移除重复节点.cpp"; sourceTree = "<group>"; };
		65870734250BB560005BFEC2 /* faceTest_0201_移除重复节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "faceTest_0201_移除重复节点.hpp"; sourceTree = "<group>"; };
		65A1285825135967008E24AF /* 1544_整理字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1544_整理字符串.cpp"; sourceTree = "<group>"; };
		65A1285925135967008E24AF /* 1544_整理字符串.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "1544_整理字符串.hpp"; sourceTree = "<group>"; };
		65A1285C251374BE008E24AF /* 225_用队列实现栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "225_用队列实现栈.cpp"; sourceTree = "<group>"; };
		65A1285D251374BE008E24AF /* 225_用队列实现栈.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "225_用队列实现栈.hpp"; sourceTree = "<group>"; };
		65A1286225138DAE008E24AF /* 933_最近的请求次数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "933_最近的请求次数.cpp"; sourceTree = "<group>"; };
		65A1286325138DAE008E24AF /* 933_最近的请求次数.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "933_最近的请求次数.hpp"; sourceTree = "<group>"; };
		65A1286725139293008E24AF /* offer_59_滑动窗口的最大值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_59_滑动窗口的最大值.cpp"; sourceTree = "<group>"; };
		65A1286825139293008E24AF /* offer_59_滑动窗口的最大值.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_59_滑动窗口的最大值.hpp"; sourceTree = "<group>"; };
		65A1286B2513A84B008E24AF /* 239_滑动窗口最大值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "239_滑动窗口最大值.cpp"; sourceTree = "<group>"; };
		65A1286C2513A84B008E24AF /* 239_滑动窗口最大值.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "239_滑动窗口最大值.hpp"; sourceTree = "<group>"; };
		65A9D3E8251B234800244EFF /* 107_二叉树的层次遍历 II.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "107_二叉树的层次遍历 II.cpp"; sourceTree = "<group>"; };
		65A9D3E9251B234800244EFF /* 107_二叉树的层次遍历 II.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "107_二叉树的层次遍历 II.hpp"; sourceTree = "<group>"; };
		65A9D3EC251B239000244EFF /* 662_二叉树最大宽度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "662_二叉树最大宽度.cpp"; sourceTree = "<group>"; };
		65A9D3ED251B239000244EFF /* 662_二叉树最大宽度.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "662_二叉树最大宽度.hpp"; sourceTree = "<group>"; };
		65A9D3F0251B23E000244EFF /* 589_N叉树的前序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "589_N叉树的前序遍历.cpp"; sourceTree = "<group>"; };
		65A9D3F1251B23E000244EFF /* 589_N叉树的前序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "589_N叉树的前序遍历.hpp"; sourceTree = "<group>"; };
		65A9D3F4251B240D00244EFF /* 590_N叉树的后序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "590_N叉树的后序遍历.cpp"; sourceTree = "<group>"; };
		65A9D3F5251B240D00244EFF /* 590_N叉树的后序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "590_N叉树的后序遍历.hpp"; sourceTree = "<group>"; };
		65A9D3F8251B243700244EFF /* 559_N叉树的最大深度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "559_N叉树的最大深度.cpp"; sourceTree = "<group>"; };
		65A9D3F9251B243700244EFF /* 559_N叉树的最大深度.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "559_N叉树的最大深度.hpp"; sourceTree = "<group>"; };
		65A9D3FC251B246900244EFF /* 114_二叉树展开为链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "114_二叉树展开为链表.cpp"; sourceTree = "<group>"; };
		65A9D3FD251B246900244EFF /* 114_二叉树展开为链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "114_二叉树展开为链表.hpp"; sourceTree = "<group>"; };
		65A9D400251B249900244EFF /* 101_对称二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "101_对称二叉树.cpp"; sourceTree = "<group>"; };
		65A9D401251B249900244EFF /* 101_对称二叉树.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "101_对称二叉树.hpp"; sourceTree = "<group>"; };
		65A9D404251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "889_根据前序和后序遍历构造二叉树.cpp"; sourceTree = "<group>"; };
		65A9D405251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "889_根据前序和后序遍历构造二叉树.hpp"; sourceTree = "<group>"; };
		65A9D408251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "106_从中序与后序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		65A9D409251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "106_从中序与后序遍历序列构造二叉树.hpp"; sourceTree = "<group>"; };
		65A9D40C251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "105_从前序与中序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		65A9D40D251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "105_从前序与中序遍历序列构造二叉树.hpp"; sourceTree = "<group>"; };
		65B5374A250903DB00FE9807 /* 203_移除链表元素.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "203_移除链表元素.cpp"; sourceTree = "<group>"; };
		65B5374B250903DB00FE9807 /* 203_移除链表元素.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "203_移除链表元素.hpp"; sourceTree = "<group>"; };
		65B6820D250F583A00C039AB /* 160_相交链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "160_相交链表.cpp"; sourceTree = "<group>"; };
		65B6820E250F583A00C039AB /* 160_相交链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "160_相交链表.hpp"; sourceTree = "<group>"; };
		65C28C682519DA9F00C94E7C /* 226_翻转二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "226_翻转二叉树.cpp"; sourceTree = "<group>"; };
		65C28C692519DA9F00C94E7C /* 226_翻转二叉树.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "226_翻转二叉树.hpp"; sourceTree = "<group>"; };
		65C28C6D2519DC5A00C94E7C /* TreeNode.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = TreeNode.hpp; sourceTree = "<group>"; };
		65CCFBC4250F75E700ECC563 /* 20_有效的括号.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "20_有效的括号.cpp"; sourceTree = "<group>"; };
		65CCFBC5250F75E700ECC563 /* 20_有效的括号.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "20_有效的括号.hpp"; sourceTree = "<group>"; };
		65D2EAAF250F4214009DC352 /* faceTest_0207_链表相交.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "faceTest_0207_链表相交.cpp"; sourceTree = "<group>"; };
		65D2EAB0250F4214009DC352 /* faceTest_0207_链表相交.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "faceTest_0207_链表相交.hpp"; sourceTree = "<group>"; };
		65D2EAB2250F4AE0009DC352 /* 21_合并两个有序链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "21_合并两个有序链表.cpp"; sourceTree = "<group>"; };
		65D2EAB3250F4AE0009DC352 /* 21_合并两个有序链表.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "21_合并两个有序链表.hpp"; sourceTree = "<group>"; };
		65D2EAB5250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_52_两个链表的第一个公共节点.cpp"; sourceTree = "<group>"; };
		65D2EAB6250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_52_两个链表的第一个公共节点.hpp"; sourceTree = "<group>"; };
		65D2EAB8250F53E9009DC352 /* offer_18_删除链表的节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_18_删除链表的节点.cpp"; sourceTree = "<group>"; };
		65D2EAB9250F53E9009DC352 /* offer_18_删除链表的节点.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_18_删除链表的节点.hpp"; sourceTree = "<group>"; };
		65DF9BD22519F6F70055E0BE /* 144_二叉树的前序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "144_二叉树的前序遍历.cpp"; sourceTree = "<group>"; };
		65DF9BD32519F6F70055E0BE /* 144_二叉树的前序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "144_二叉树的前序遍历.hpp"; sourceTree = "<group>"; };
		65DF9BD7251A03860055E0BE /* 145_二叉树的后序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "145_二叉树的后序遍历.cpp"; sourceTree = "<group>"; };
		65DF9BD8251A03860055E0BE /* 145_二叉树的后序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "145_二叉树的后序遍历.hpp"; sourceTree = "<group>"; };
		65DF9BDC251A27610055E0BE /* 94_二叉树的中序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "94_二叉树的中序遍历.cpp"; sourceTree = "<group>"; };
		65DF9BDD251A27610055E0BE /* 94_二叉树的中序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "94_二叉树的中序遍历.hpp"; sourceTree = "<group>"; };
		65DF9BE1251A30320055E0BE /* 102_二叉树的层序遍历.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "102_二叉树的层序遍历.cpp"; sourceTree = "<group>"; };
		65DF9BE2251A30320055E0BE /* 102_二叉树的层序遍历.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "102_二叉树的层序遍历.hpp"; sourceTree = "<group>"; };
		65DF9BE5251A33320055E0BE /* 104_二叉树的最大深度.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "104_二叉树的最大深度.cpp"; sourceTree = "<group>"; };
		65DF9BE6251A33320055E0BE /* 104_二叉树的最大深度.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "104_二叉树的最大深度.hpp"; sourceTree = "<group>"; };
		65FA4BD72511F73900FB8651 /* offer_09_用两个栈实现队列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "offer_09_用两个栈实现队列.cpp"; sourceTree = "<group>"; };
		65FA4BD82511F73900FB8651 /* offer_09_用两个栈实现队列.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "offer_09_用两个栈实现队列.hpp"; sourceTree = "<group>"; };
		65FA4BDA2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1047__删除字符串中的所有相邻重复项.cpp"; sourceTree = "<group>"; };
		65FA4BDB2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "1047__删除字符串中的所有相邻重复项.hpp"; sourceTree = "<group>"; };
		65FA4BDD2511FFB700FB8651 /* 682_棒球比赛.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "682_棒球比赛.cpp"; sourceTree = "<group>"; };
		65FA4BDE2511FFB700FB8651 /* 682_棒球比赛.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "682_棒球比赛.hpp"; sourceTree = "<group>"; };
		65FA4BE02512024E00FB8651 /* 496_下一个更大元素 I.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "496_下一个更大元素 I.cpp"; sourceTree = "<group>"; };
		65FA4BE12512024E00FB8651 /* 496_下一个更大元素 I.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "496_下一个更大元素 I.hpp"; sourceTree = "<group>"; };
		65FA4BE3251205FA00FB8651 /* 1441_用栈操作构建数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1441_用栈操作构建数组.cpp"; sourceTree = "<group>"; };
		65FA4BE4251205FA00FB8651 /* 1441_用栈操作构建数组.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "1441_用栈操作构建数组.hpp"; sourceTree = "<group>"; };
		65FA4BE625120AD000FB8651 /* faceTest_0302_栈的最小值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "faceTest_0302_栈的最小值.cpp"; sourceTree = "<group>"; };
		65FA4BE725120AD000FB8651 /* faceTest_0302_栈的最小值.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "faceTest_0302_栈的最小值.hpp"; sourceTree = "<group>"; };
		65FA4BE925120D8D00FB8651 /* 844_比较含退格的字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "844_比较含退格的字符串.cpp"; sourceTree = "<group>"; };
		65FA4BEA25120D8D00FB8651 /* 844_比较含退格的字符串.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = "844_比较含退格的字符串.hpp"; sourceTree = "<group>"; };
		65FA4BEC25120DC000FB8651 /* fileNameHeader.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = fileNameHeader.h; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		658295DA24ED057E0077E48E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		65118AEC2508E907004D8F15 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				65D2EAB2250F4AE0009DC352 /* 21_合并两个有序链表.cpp */,
				65D2EAB3250F4AE0009DC352 /* 21_合并两个有序链表.hpp */,
				654466B52509111000E5959E /* 83_删除排序链表中的重复元素.cpp */,
				654466B62509111000E5959E /* 83_删除排序链表中的重复元素.hpp */,
				65118AFC2508FF79004D8F15 /* 141_环形链表.cpp */,
				65118AFD2508FF79004D8F15 /* 141_环形链表.hpp */,
				65B6820D250F583A00C039AB /* 160_相交链表.cpp */,
				65B6820E250F583A00C039AB /* 160_相交链表.hpp */,
				65B5374A250903DB00FE9807 /* 203_移除链表元素.cpp */,
				65B5374B250903DB00FE9807 /* 203_移除链表元素.hpp */,
				65118AF62508F3E4004D8F15 /* 206_反转链表.cpp */,
				65118AF72508F3E4004D8F15 /* 206_反转链表.hpp */,
				65282CFD250F6DE000CEFC94 /* 234_回文链表.cpp */,
				65282CFE250F6DE000CEFC94 /* 234_回文链表.hpp */,
				65118AED2508EA58004D8F15 /* 237_删除链表中的节点.cpp */,
				65118AEE2508EA58004D8F15 /* 237_删除链表中的节点.hpp */,
				654466B82509134800E5959E /* 876_链表的中间节点.cpp */,
				654466B92509134800E5959E /* 876_链表的中间节点.hpp */,
				65870724250B9C5D005BFEC2 /* 1290_二进制链表转整数.cpp */,
				65870725250B9C5D005BFEC2 /* 1290_二进制链表转整数.hpp */,
				6587072D250BA768005BFEC2 /* offer_06_从尾到头打印链表.cpp */,
				6587072E250BA768005BFEC2 /* offer_06_从尾到头打印链表.hpp */,
				65D2EAB8250F53E9009DC352 /* offer_18_删除链表的节点.cpp */,
				65D2EAB9250F53E9009DC352 /* offer_18_删除链表的节点.hpp */,
				65870727250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.cpp */,
				65870728250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.hpp */,
				65870730250BB3F1005BFEC2 /* offer_24_反转链表.cpp */,
				65870731250BB3F1005BFEC2 /* offer_24_反转链表.hpp */,
				65D2EAB5250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.cpp */,
				65D2EAB6250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.hpp */,
				65870733250BB560005BFEC2 /* faceTest_0201_移除重复节点.cpp */,
				65870734250BB560005BFEC2 /* faceTest_0201_移除重复节点.hpp */,
				6587072A250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.cpp */,
				6587072B250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.hpp */,
				65282CFA250F5E0C00CEFC94 /* faceTest_0206_回文链表.cpp */,
				65282CFB250F5E0C00CEFC94 /* faceTest_0206_回文链表.hpp */,
				65D2EAAF250F4214009DC352 /* faceTest_0207_链表相交.cpp */,
				65D2EAB0250F4214009DC352 /* faceTest_0207_链表相交.hpp */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		65118AF02508EBC1004D8F15 /* 字符串 */ = {
			isa = PBXGroup;
			children = (
				65118AE82508D175004D8F15 /* 5_最长回文子串.cpp */,
				65118AEB2508D444004D8F15 /* 5_最长回文子串.h */,
				65118AF12508EC4B004D8F15 /* 14_最长公共前缀.cpp */,
				65118AF22508EC4B004D8F15 /* 14_最长公共前缀.hpp */,
			);
			path = "字符串";
			sourceTree = "<group>";
		};
		65118AF52508EEB9004D8F15 /* 数字计算 */ = {
			isa = PBXGroup;
			children = (
				65118AE62508CFBD004D8F15 /* 509_斐波那契数.cpp */,
				65118AEA2508D41C004D8F15 /* 509_斐波那契数.h */,
			);
			path = "数字计算";
			sourceTree = "<group>";
		};
		658295D424ED057E0077E48E = {
			isa = PBXGroup;
			children = (
				658295DF24ED057E0077E48E /* testC++++ */,
				658295DE24ED057E0077E48E /* Products */,
			);
			sourceTree = "<group>";
		};
		658295DE24ED057E0077E48E /* Products */ = {
			isa = PBXGroup;
			children = (
				658295DD24ED057E0077E48E /* testC++++ */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		658295DF24ED057E0077E48E /* testC++++ */ = {
			isa = PBXGroup;
			children = (
				658295E024ED057E0077E48E /* main.cpp */,
				65118AF42508EC7A004D8F15 /* common.h */,
				65FA4BEC25120DC000FB8651 /* fileNameHeader.h */,
				65118AFA2508F836004D8F15 /* ListNode.hpp */,
				65C28C6D2519DC5A00C94E7C /* TreeNode.hpp */,
				65C28C672519DA6F00C94E7C /* 二叉树 */,
				65A1286025138D9D008E24AF /* 队列 */,
				65CCFBC3250F75CE00ECC563 /* 栈 */,
				65118AF02508EBC1004D8F15 /* 字符串 */,
				65118AEC2508E907004D8F15 /* 链表 */,
				65118AF52508EEB9004D8F15 /* 数字计算 */,
			);
			path = "testC++++";
			sourceTree = "<group>";
		};
		65A1286025138D9D008E24AF /* 队列 */ = {
			isa = PBXGroup;
			children = (
				65A1286225138DAE008E24AF /* 933_最近的请求次数.cpp */,
				65A1286325138DAE008E24AF /* 933_最近的请求次数.hpp */,
				65A1286725139293008E24AF /* offer_59_滑动窗口的最大值.cpp */,
				65A1286825139293008E24AF /* offer_59_滑动窗口的最大值.hpp */,
				65A1286B2513A84B008E24AF /* 239_滑动窗口最大值.cpp */,
				65A1286C2513A84B008E24AF /* 239_滑动窗口最大值.hpp */,
			);
			path = "队列";
			sourceTree = "<group>";
		};
		65C28C672519DA6F00C94E7C /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				65DF9BDC251A27610055E0BE /* 94_二叉树的中序遍历.cpp */,
				65DF9BDD251A27610055E0BE /* 94_二叉树的中序遍历.hpp */,
				65A9D400251B249900244EFF /* 101_对称二叉树.cpp */,
				65A9D401251B249900244EFF /* 101_对称二叉树.hpp */,
				65DF9BE1251A30320055E0BE /* 102_二叉树的层序遍历.cpp */,
				65DF9BE2251A30320055E0BE /* 102_二叉树的层序遍历.hpp */,
				65DF9BE5251A33320055E0BE /* 104_二叉树的最大深度.cpp */,
				65DF9BE6251A33320055E0BE /* 104_二叉树的最大深度.hpp */,
				65A9D40C251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.cpp */,
				65A9D40D251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.hpp */,
				65A9D408251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.cpp */,
				65A9D409251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.hpp */,
				65A9D3E8251B234800244EFF /* 107_二叉树的层次遍历 II.cpp */,
				65A9D3E9251B234800244EFF /* 107_二叉树的层次遍历 II.hpp */,
				65A9D3FC251B246900244EFF /* 114_二叉树展开为链表.cpp */,
				65A9D3FD251B246900244EFF /* 114_二叉树展开为链表.hpp */,
				65DF9BD22519F6F70055E0BE /* 144_二叉树的前序遍历.cpp */,
				65DF9BD32519F6F70055E0BE /* 144_二叉树的前序遍历.hpp */,
				65DF9BD7251A03860055E0BE /* 145_二叉树的后序遍历.cpp */,
				65DF9BD8251A03860055E0BE /* 145_二叉树的后序遍历.hpp */,
				65C28C682519DA9F00C94E7C /* 226_翻转二叉树.cpp */,
				65C28C692519DA9F00C94E7C /* 226_翻转二叉树.hpp */,
				65A9D3F8251B243700244EFF /* 559_N叉树的最大深度.cpp */,
				65A9D3F9251B243700244EFF /* 559_N叉树的最大深度.hpp */,
				65A9D3F0251B23E000244EFF /* 589_N叉树的前序遍历.cpp */,
				65A9D3F1251B23E000244EFF /* 589_N叉树的前序遍历.hpp */,
				65A9D3F4251B240D00244EFF /* 590_N叉树的后序遍历.cpp */,
				65A9D3F5251B240D00244EFF /* 590_N叉树的后序遍历.hpp */,
				65A9D3EC251B239000244EFF /* 662_二叉树最大宽度.cpp */,
				65A9D3ED251B239000244EFF /* 662_二叉树最大宽度.hpp */,
				65A9D404251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.cpp */,
				65A9D405251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.hpp */,
			);
			path = "二叉树";
			sourceTree = "<group>";
		};
		65CCFBC3250F75CE00ECC563 /* 栈 */ = {
			isa = PBXGroup;
			children = (
				65CCFBC4250F75E700ECC563 /* 20_有效的括号.cpp */,
				65CCFBC5250F75E700ECC563 /* 20_有效的括号.hpp */,
				6546F4622510F0730016F09D /* 150_逆波兰表达式求值.cpp */,
				6546F4632510F0730016F09D /* 150_逆波兰表达式求值.hpp */,
				6546F4652510F5650016F09D /* 224_基本计算器.cpp */,
				6546F4662510F5650016F09D /* 224_基本计算器.hpp */,
				65A1285C251374BE008E24AF /* 225_用队列实现栈.cpp */,
				65A1285D251374BE008E24AF /* 225_用队列实现栈.hpp */,
				6546F46A2511ED570016F09D /* 232_用栈实现队列.cpp */,
				6546F46B2511ED570016F09D /* 232_用栈实现队列.hpp */,
				65FA4BE02512024E00FB8651 /* 496_下一个更大元素 I.cpp */,
				65FA4BE12512024E00FB8651 /* 496_下一个更大元素 I.hpp */,
				65FA4BDD2511FFB700FB8651 /* 682_棒球比赛.cpp */,
				65FA4BDE2511FFB700FB8651 /* 682_棒球比赛.hpp */,
				65FA4BE925120D8D00FB8651 /* 844_比较含退格的字符串.cpp */,
				65FA4BEA25120D8D00FB8651 /* 844_比较含退格的字符串.hpp */,
				6546F45F2510DF8E0016F09D /* 856_括号的分数.cpp */,
				6546F4602510DF8E0016F09D /* 856_括号的分数.hpp */,
				6546F46D2511F2D30016F09D /* 1021_删除最外层的括号.cpp */,
				6546F46E2511F2D30016F09D /* 1021_删除最外层的括号.hpp */,
				65FA4BDA2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.cpp */,
				65FA4BDB2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.hpp */,
				65FA4BE3251205FA00FB8651 /* 1441_用栈操作构建数组.cpp */,
				65FA4BE4251205FA00FB8651 /* 1441_用栈操作构建数组.hpp */,
				65A1285825135967008E24AF /* 1544_整理字符串.cpp */,
				65A1285925135967008E24AF /* 1544_整理字符串.hpp */,
				65FA4BD72511F73900FB8651 /* offer_09_用两个栈实现队列.cpp */,
				65FA4BD82511F73900FB8651 /* offer_09_用两个栈实现队列.hpp */,
				65FA4BE625120AD000FB8651 /* faceTest_0302_栈的最小值.cpp */,
				65FA4BE725120AD000FB8651 /* faceTest_0302_栈的最小值.hpp */,
			);
			path = "栈";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		658295DC24ED057E0077E48E /* testC++++ */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 658295E424ED057E0077E48E /* Build configuration list for PBXNativeTarget "testC++++" */;
			buildPhases = (
				658295D924ED057E0077E48E /* Sources */,
				658295DA24ED057E0077E48E /* Frameworks */,
				658295DB24ED057E0077E48E /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "testC++++";
			productName = "testC++++";
			productReference = 658295DD24ED057E0077E48E /* testC++++ */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		658295D524ED057E0077E48E /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1200;
				TargetAttributes = {
					658295DC24ED057E0077E48E = {
						CreatedOnToolsVersion = 12.0;
					};
				};
			};
			buildConfigurationList = 658295D824ED057E0077E48E /* Build configuration list for PBXProject "testC++++" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 658295D424ED057E0077E48E;
			productRefGroup = 658295DE24ED057E0077E48E /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				658295DC24ED057E0077E48E /* testC++++ */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		658295D924ED057E0077E48E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				65870729250BA06C005BFEC2 /* offer_22_链表中倒数第k个节点.cpp in Sources */,
				65A1286925139293008E24AF /* offer_59_滑动窗口的最大值.cpp in Sources */,
				65FA4BEB25120D8D00FB8651 /* 844_比较含退格的字符串.cpp in Sources */,
				65B6820F250F583A00C039AB /* 160_相交链表.cpp in Sources */,
				65118AFB2508F836004D8F15 /* ListNode.hpp in Sources */,
				65A9D3EA251B234800244EFF /* 107_二叉树的层次遍历 II.cpp in Sources */,
				65A9D40E251B252600244EFF /* 105_从前序与中序遍历序列构造二叉树.cpp in Sources */,
				65B5374C250903DB00FE9807 /* 203_移除链表元素.cpp in Sources */,
				65FA4BD92511F73900FB8651 /* offer_09_用两个栈实现队列.cpp in Sources */,
				65A1285E251374BE008E24AF /* 225_用队列实现栈.cpp in Sources */,
				6546F4642510F0730016F09D /* 150_逆波兰表达式求值.cpp in Sources */,
				65A1286D2513A84B008E24AF /* 239_滑动窗口最大值.cpp in Sources */,
				65FA4BDC2511F9D000FB8651 /* 1047__删除字符串中的所有相邻重复项.cpp in Sources */,
				65DF9BD9251A03860055E0BE /* 145_二叉树的后序遍历.cpp in Sources */,
				65118AE72508CFBD004D8F15 /* 509_斐波那契数.cpp in Sources */,
				65DF9BE7251A33320055E0BE /* 104_二叉树的最大深度.cpp in Sources */,
				654466B72509111000E5959E /* 83_删除排序链表中的重复元素.cpp in Sources */,
				65870726250B9C5D005BFEC2 /* 1290_二进制链表转整数.cpp in Sources */,
				65D2EAB4250F4AE0009DC352 /* 21_合并两个有序链表.cpp in Sources */,
				65A1286425138DAE008E24AF /* 933_最近的请求次数.cpp in Sources */,
				65282CFF250F6DE000CEFC94 /* 234_回文链表.cpp in Sources */,
				65282CFC250F5E0C00CEFC94 /* faceTest_0206_回文链表.cpp in Sources */,
				65A9D3F2251B23E000244EFF /* 589_N叉树的前序遍历.cpp in Sources */,
				65A9D3EE251B239000244EFF /* 662_二叉树最大宽度.cpp in Sources */,
				65DF9BD42519F6F70055E0BE /* 144_二叉树的前序遍历.cpp in Sources */,
				65D2EAB7250F52D5009DC352 /* offer_52_两个链表的第一个公共节点.cpp in Sources */,
				65CCFBC6250F75E700ECC563 /* 20_有效的括号.cpp in Sources */,
				6587072F250BA768005BFEC2 /* offer_06_从尾到头打印链表.cpp in Sources */,
				65A9D3FE251B246900244EFF /* 114_二叉树展开为链表.cpp in Sources */,
				65870735250BB560005BFEC2 /* faceTest_0201_移除重复节点.cpp in Sources */,
				65870732250BB3F1005BFEC2 /* offer_24_反转链表.cpp in Sources */,
				65FA4BE22512024E00FB8651 /* 496_下一个更大元素 I.cpp in Sources */,
				65118AF32508EC4B004D8F15 /* 14_最长公共前缀.cpp in Sources */,
				65A9D406251B24CF00244EFF /* 889_根据前序和后序遍历构造二叉树.cpp in Sources */,
				658295E124ED057E0077E48E /* main.cpp in Sources */,
				6546F46F2511F2D30016F09D /* 1021_删除最外层的括号.cpp in Sources */,
				6546F4612510DF8E0016F09D /* 856_括号的分数.cpp in Sources */,
				65A9D3F6251B240D00244EFF /* 590_N叉树的后序遍历.cpp in Sources */,
				6546F4672510F5650016F09D /* 224_基本计算器.cpp in Sources */,
				65A9D3FA251B243700244EFF /* 559_N叉树的最大深度.cpp in Sources */,
				65FA4BDF2511FFB700FB8651 /* 682_棒球比赛.cpp in Sources */,
				65D2EABA250F53E9009DC352 /* offer_18_删除链表的节点.cpp in Sources */,
				654466BA2509134800E5959E /* 876_链表的中间节点.cpp in Sources */,
				65DF9BE3251A30320055E0BE /* 102_二叉树的层序遍历.cpp in Sources */,
				65A9D402251B249A00244EFF /* 101_对称二叉树.cpp in Sources */,
				6587072C250BA320005BFEC2 /* faceTest_0202_返回倒数第 k 个节点.cpp in Sources */,
				65DF9BDE251A27610055E0BE /* 94_二叉树的中序遍历.cpp in Sources */,
				65A9D40A251B24FE00244EFF /* 106_从中序与后序遍历序列构造二叉树.cpp in Sources */,
				65118AFE2508FF79004D8F15 /* 141_环形链表.cpp in Sources */,
				65C28C6A2519DA9F00C94E7C /* 226_翻转二叉树.cpp in Sources */,
				65118AEF2508EA58004D8F15 /* 237_删除链表中的节点.cpp in Sources */,
				65118AE92508D175004D8F15 /* 5_最长回文子串.cpp in Sources */,
				65118AF82508F3E4004D8F15 /* 206_反转链表.cpp in Sources */,
				65FA4BE5251205FA00FB8651 /* 1441_用栈操作构建数组.cpp in Sources */,
				65FA4BE825120AD000FB8651 /* faceTest_0302_栈的最小值.cpp in Sources */,
				65D2EAB1250F4214009DC352 /* faceTest_0207_链表相交.cpp in Sources */,
				6546F46C2511ED570016F09D /* 232_用栈实现队列.cpp in Sources */,
				65A1285A25135967008E24AF /* 1544_整理字符串.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		658295E224ED057E0077E48E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		658295E324ED057E0077E48E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		658295E524ED057E0077E48E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 839GAQ3VG3;
				ENABLE_HARDENED_RUNTIME = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		658295E624ED057E0077E48E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 839GAQ3VG3;
				ENABLE_HARDENED_RUNTIME = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		658295D824ED057E0077E48E /* Build configuration list for PBXProject "testC++++" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				658295E224ED057E0077E48E /* Debug */,
				658295E324ED057E0077E48E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		658295E424ED057E0077E48E /* Build configuration list for PBXNativeTarget "testC++++" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				658295E524ED057E0077E48E /* Debug */,
				658295E624ED057E0077E48E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 658295D524ED057E0077E48E /* Project object */;
}
